<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AlrikRr&#39;s Blog</title>
    <link>https://AlrikRr.github.io/</link>
    <description>Recent content on AlrikRr&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://AlrikRr.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>#1 TP-Link AC750 Wifi Router</title>
      <link>https://AlrikRr.github.io/posts/reverse-engineering/iot-hacking/tplink-ac750/</link>
      <pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/reverse-engineering/iot-hacking/tplink-ac750/</guid>
      <description>Improper handling of electronic components can lead to component destruction Here is my LinkedIn post related to this article : LinkedIn-Post What you need Here are all the tools you need to perform this kind of IoT Assessment on a device. For my part I didn&amp;rsquo;t have my soldering kit so I did it without but it was not very stable.
Basic knowledge on UART ad IOT Hacking UART Bridge (Simple USB or Flipper Zero) Multimeter Cables Solder Iron (Optionnal) UART Device like Wifi Router UART ?</description>
    </item>
    
    <item>
      <title>D-Link - DCS-932L</title>
      <link>https://AlrikRr.github.io/posts/reverse-engineering/iot-hacking/d-link-dcs-932l/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/reverse-engineering/iot-hacking/d-link-dcs-932l/</guid>
      <description>This is actually my first firmware &amp;ldquo;Reverse&amp;rdquo;. This post will also serve as a tutorial for myself and others ! For education purpose Sources Version : 1.14.04 MD5 : b93d60f595c4736a153ca8c61d77ffc6 Download link http://files.dlink.com.au/products/DCS-932L/REV_A/Firmware/ This test we perfomed on Kali Linux VM.
Stage 1 - Analysis Using binwalk we can &amp;ldquo;walk&amp;rdquo; through the firmware and check signatures inside the binary, those signatures return known Desciption and Hex address. of what&amp;rsquo;s inside the binary.</description>
    </item>
    
    <item>
      <title>UART Bridge RPi4 to Flipper</title>
      <link>https://AlrikRr.github.io/posts/flipper-zero/flipper-gpio/uart-bridge-pi4/</link>
      <pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/flipper-zero/flipper-gpio/uart-bridge-pi4/</guid>
      <description>Schema This is a simple tutorial for UART bridge function on the Flipper Zero. I&amp;rsquo;m using RaspberryPi4, FlipperZero and a Macbook laptop for this tutorial.
The bridge is pretty simple, we connect UART pin from Raspberry Pi4 to Flipper Zero and get a shell using flipper tty from the laptop.
UART Concept UART is a serial protocol, which means it transfers data between components one bit at a time.
To synchornize communications, the UART transmitter and receiver must agree on a specific baud rate ( the rate of bits transmitted per second)</description>
    </item>
    
    <item>
      <title>USB to tty</title>
      <link>https://AlrikRr.github.io/posts/flipper-zero/flipper-gpio/tty-shell/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/flipper-zero/flipper-gpio/tty-shell/</guid>
      <description>The following command have been performed on my MacBook, but the commands are the same on linux.
#MacOS brew install tio #Linux apt install tio Once installed, you may locate the tty device of your flipper.
If you have issue finding it, just check the path on the qflipper app
In the screenshot, you can see the cu device, we are looking for the tty interface, it should be in the same path and have the name of your flipper.</description>
    </item>
    
    <item>
      <title>My eJPT feedback</title>
      <link>https://AlrikRr.github.io/posts/updates/my-ejpt/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/updates/my-ejpt/</guid>
      <description>eJPT Experience Hello There ! Here is a small post about my eJPT feedback !
I passed my eJPT on the 27th of August and validate it after 3h. I didn&amp;rsquo;t take the course, only one voucher.
To pass the exam, you may need to answer 15 correct questions.
Exam Guide The Exam for the eJPT is well guided, you&amp;rsquo;ll need to answer 20 multiple choices question before the 3 days due date after starting your exam.</description>
    </item>
    
    <item>
      <title>Almost ByPass Defender with VBA Script</title>
      <link>https://AlrikRr.github.io/posts/malware/dev-projects/simple-vba-bypass-defender/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/malware/dev-projects/simple-vba-bypass-defender/</guid>
      <description>Disclaimer : Hello This is actually my first real Macro while trying to obfuscate and ByPass Defender (Sort Of) ! This Code will escape Defender but the remote payload will not since it was a Meterpreter PowerShell, maybe in the next part üë®‚Äçüíª
Someone asked me to create a file that contains a Macro for downloading a malicious file while evading Defender ! Here is my first attempt, it was cool and might create more with more elaborate code !</description>
    </item>
    
    <item>
      <title>#1 Setup the Domain and Workstations</title>
      <link>https://AlrikRr.github.io/posts/active-directory/build-training-lab/1-domain/</link>
      <pubDate>Fri, 19 Aug 2022 11:00:00 -0400</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/active-directory/build-training-lab/1-domain/</guid>
      <description>Disclaimer : I&amp;rsquo;m following the amazing series of video from John Hammond! I&amp;rsquo;ll edit as much as possible the code and not try to copy paste John&amp;rsquo;s work üòä
All the code and information are available on my github repo : AlrikRr/ActiveDirectory_Lab
Leave a ‚≠ê and follow ! Prerequisite Here is the list of stuff you&amp;rsquo;ll need to build this training lab on your own:
Good PC (At least 16GB of RAM and 500GB SSD) ISO files for Windows 11 and Windows Server 2022 VMWare workstation Network Schema Domain Controller:</description>
    </item>
    
    <item>
      <title>#4 Clock Logic</title>
      <link>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/4-clocklogic/</link>
      <pubDate>Sat, 11 Jun 2022 09:27:47 -0400</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/4-clocklogic/</guid>
      <description>Disclaimer : I&amp;rsquo;m following the amazing series of videos from Ben Eater using his electronic built kit for the 8 bits computer. This series of post is only there for my personnal understanding about electronic and this amazing project. I ablsolutly recommand you to watch his series of videos instead of reading this post of course ! Play-List-Link
Disclaimer 2 : I&amp;rsquo;m not an expert at all, Just a beginner who wants to learn, I stay tuned for corrections or advice!</description>
    </item>
    
    <item>
      <title>#3 Bistable 555 Timer</title>
      <link>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/3-bistable555timer/</link>
      <pubDate>Sun, 05 Jun 2022 17:27:47 -0400</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/3-bistable555timer/</guid>
      <description>Disclaimer : I&amp;rsquo;m following the amazing series of videos from Ben Eater using his electronic built kit for the 8 bits computer. This series of post is only there for my personnal understanding about electronic and this amazing project. I ablsolutly recommand you to watch his series of videos instead of reading this post of course ! Play-List-Link
Disclaimer 2 : I&amp;rsquo;m not an expert at all, Just a beginner who wants to learn, I stay tuned for corrections or advice!</description>
    </item>
    
    <item>
      <title>#2 Monostable 555 Timer</title>
      <link>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/2-monostable555timer/</link>
      <pubDate>Sun, 05 Jun 2022 09:27:47 -0400</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/2-monostable555timer/</guid>
      <description>Disclaimer : I&amp;rsquo;m following the amazing series of videos from Ben Eater using his electronic built kit for the 8 bits computer. This series of post is only there for my personnal understanding about electronic and this amazing project. I ablsolutly recommand you to watch his series of videos instead of reading this post of course ! Play-List-Link
Disclaimer 2 : I&amp;rsquo;m not an expert at all, Just a beginner who wants to learn, I stay tuned for corrections or advice!</description>
    </item>
    
    <item>
      <title>#1 Astable 555 Timer</title>
      <link>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/1-astable555timer/</link>
      <pubDate>Sat, 04 Jun 2022 10:27:47 -0400</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/8bits-computer/part1-clock/1-astable555timer/</guid>
      <description>Disclaimer : I&amp;rsquo;m following the amazing series of videos from Ben Eater using his electronic built kit for the 8 bits computer. This series of post is only there for my personnal understanding about electronic and this amazing project. I ablsolutly recommand you to watch his series of videos instead of reading this post of course ! Play-List-Link
Disclaimer 2 : I&amp;rsquo;m not an expert at all, Just a beginner who wants to learn, I stay tuned for corrections or advice!</description>
    </item>
    
    <item>
      <title>VBS MP3 Downloader</title>
      <link>https://AlrikRr.github.io/posts/malware/investigations/vbs-mp3-downloader-1/</link>
      <pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/malware/investigations/vbs-mp3-downloader-1/</guid>
      <description>Identification Name 71f51f194201d9d3a86fa99255909017632302bd7007b50b400490a5cd4a4043.vbs Hash (256) 3dbfb4bcbc5432a332fa3f21ffcefcf2cbf1c990 Size 71K From https://bazaar.abuse.ch/download/71f51f194201d9d3a86fa99255909017632302bd7007b50b400490a5cd4a4043/ VBS - Code Hello There !
Today we are going to check a VBS code and see what‚Äôs inside.
Here is the VT result, only 17 EDR trigger this file as malicious. We can see some title and tags, it seems to be a downloader trojan.
VirusTotal
Clear code - comments First we need to clear the comment since there are a lot of these in the code.</description>
    </item>
    
    <item>
      <title>Kardon Loader</title>
      <link>https://AlrikRr.github.io/posts/malware/investigations/kardon/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/malware/investigations/kardon/</guid>
      <description>Identification Name kardon.exe Hash (256) 555675C526F80B9C89E02CA9D2C27F0EA61AD400 FileType PE 32 bit TimeStamp 5AFD5BE1 ‚Äî&amp;gt;¬†GMT: Thursday 17 May 2018 10:39:29 FileSize 10KB ImageBase 000011AD EntryPoint(RVA) 00400000 VA(IB+RVA) 004011AD Sections There are 4 sections :
.text .rdata .data .reloc Imports Interesting DLLs :
urlmon.dll: URLDownloadToFileA() SHELL32.dll: SHGetFolderPathA() KERNEL32.dll: GetCommandLineA(), MoveFileExA(), WinExec(), GetCurrentProcess(), etc. ADVAPI32.dll: RegCreateKeyA(), RegSetValueExA(), etc. üí° The identification of the malware is done, we have a better understanding of the malware at the moment.</description>
    </item>
    
    <item>
      <title>Legacy</title>
      <link>https://AlrikRr.github.io/posts/htb/easy/windows/legacy/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/htb/easy/windows/legacy/</guid>
      <description>Re-Post from October 2021, 13rd Enumeration nmap sudo nmap -v -sS -A -Pn legacy.htb Using nmap we can definitly see the NetBIOS protocol on the SMB port. This machine is a XP Legacy OS so we can maybe try some old exploit if the system is not patched.
Exploit CVE-2008-4250 msfconsole search ms08_067 use 0 After the exploit the meterpreter gives us a SYSTEM shell, no need to privesc !</description>
    </item>
    
    <item>
      <title>Forest</title>
      <link>https://AlrikRr.github.io/posts/htb/easy/windows/forest/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/htb/easy/windows/forest/</guid>
      <description>Re-Post from October 2021, 13rd Enumeration NMAP sudo nmap -v -sS -A -Pn 10.10.10.161 Simple NMAP scan to check the most commun ports and grab banner or version number.
As we can see, there are a lot of Windows server services as Kerberos, DNS LDAP, &amp;hellip;
The machine is part of the HTB.local network.
Bonus : Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)
LDAPSearch Since there is an LDAP port, we can try if there is a way to gather information on the LDAP server using ldapsearch with anonymous account.</description>
    </item>
    
    <item>
      <title>P4wnP1 Install</title>
      <link>https://AlrikRr.github.io/posts/raspberry/p4wnp1/p4wnp1-install/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/raspberry/p4wnp1/p4wnp1-install/</guid>
      <description>Hello! Today we are going to set up the Swiss army knife of the pentester.
I&amp;rsquo;m talking about the P4wnP1 ALOA project from RoganDawes!
Initially, the P4wnP1 project comes from MaMe82.Here I will show you how to install the A.L.O.A (A Little Offensive Appliance) version on your RaspberryPi Zero!
The ALOA version is a bit easier to configure and has a graphical interface via a web server for payload configuration.</description>
    </item>
    
    <item>
      <title>#3 ret2libc exploit 32-bit linux</title>
      <link>https://AlrikRr.github.io/posts/reverse-engineering/binary-exploitation/ret-2-libc/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/reverse-engineering/binary-exploitation/ret-2-libc/</guid>
      <description>ret2libc ? This is a flaw that we will exploit on a binary that has the NX (non-executable) protection enabled.
There are several ways to bypass this protection (ROP, ret2plt, etc&amp;hellip;) but here we will focus on ret2libc.
In our program, the stack is not executable but the libc contains many interesting functions and it is executable.
The idea is to go look for the functions that interest us in order to build an exploit.</description>
    </item>
    
    <item>
      <title>#2 ret2win exploit 32-bit linux</title>
      <link>https://AlrikRr.github.io/posts/reverse-engineering/binary-exploitation/ret-2-win/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/reverse-engineering/binary-exploitation/ret-2-win/</guid>
      <description>ROP 32 ? A ROP 32 works in the same way as a buffer overflow except that there is no shellcode here!
The purpose of a ROP 32 is to call a function of the program that is never called once in the program code.
In this tutorial I will show you how to execute a ROP exploit on a 32bits binary.
Code Here is the code of the program we are going to use:</description>
    </item>
    
    <item>
      <title>#1 Introduction to linux buffer-overflow 32-bit</title>
      <link>https://AlrikRr.github.io/posts/reverse-engineering/binary-exploitation/buffer-overflow/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/reverse-engineering/binary-exploitation/buffer-overflow/</guid>
      <description>What&amp;rsquo;s a BufferOverflow ? A BufferOverflow consists in overwriting the EIP stack of a program at a given time in order to compromise an application.
Stack overflow can be done by different means, but the main problem comes from a bad management of a buffer during the input by a user.
Why ? To crash an application (a DOS) Have a shell with privileged rights To steal information (Leak Memory) Have a reverse shell or a remote bind shell Requirements Before starting the exploitation of our binary, we must disable the ASLR protection activated by default under linux.</description>
    </item>
    
    <item>
      <title>Bellatrix - easy</title>
      <link>https://AlrikRr.github.io/posts/write-up/vulnhub/bellatrix/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/write-up/vulnhub/bellatrix/</guid>
      <description>NMAP Okay let&amp;rsquo;s start with the beginning !
sudo nmap -A -sS bellatrix.vuln
As we can see, there are two main services :
PORT Status Banner 22 OPEN OpenSSH 8.3p1 80 OPEN Apache http 2.4.46 Web Application The web application is using the http port 80. This page is a static html with a gif and a strange text with a .php at the end.
Unfortunatle, the page http://192.168.1.166/ikilledsiriusblack[...]ikilledsiriusblack.php is FORBIDEN.</description>
    </item>
    
    <item>
      <title>Y0usef - easy</title>
      <link>https://AlrikRr.github.io/posts/write-up/vulnhub/y0usef/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/write-up/vulnhub/y0usef/</guid>
      <description>LEVEL : Easy
TIME SPEND : 1h30
LINK : y0usef 1
NMAP Welcome to a new writeup vulnhub.
Let&amp;rsquo;s start with an nmap to list the services open on the machine.
sudo nmap -A -p- -Pn -T 5 yousef.vuln As we can see, there are two main services :
PORT Status Banner 22 OPEN OpenSSH 6.6.1p1 80 OPEN Apache http 2.4.10 Let&amp;rsquo;s check the HTTP service.
Web Application On the index page there is nothing interesting.</description>
    </item>
    
    <item>
      <title>Cuckoo sandbox install</title>
      <link>https://AlrikRr.github.io/posts/malware/malware-tutorials/cuckoo-sandbox/</link>
      <pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/malware/malware-tutorials/cuckoo-sandbox/</guid>
      <description>EDIT - 03/03/202021 : I upgrade the Windows 7 install for a Windows 10.
Hello! it&amp;rsquo;s been a while since I&amp;rsquo;ve done a little tutorial on my blog!
Today we&amp;rsquo;re going to see how to install and configure cuckoo sandbox for dynamic analysis on a Windows 10 machine!
INFO : I made this tutorial on a Ubuntu 20.04 updated machine and virtualbox 6.1. You may have version problems depending on the packages you are going to install.</description>
    </item>
    
    <item>
      <title>How to configure NixOS</title>
      <link>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-conf/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-conf/</guid>
      <description>Basic setup file The NixOS configuration file can be found in /etc/nixos/configuration.nix.
It is recommended to understand the configuration file before pasting it supidly into your own, there are some options to change and configure by yourself !
# Edit this configuration file to define what should be installed on # your system. Help is available in the configuration.nix(5) man page # and in the NixOS manual (accessible by running ‚Äònixos-help‚Äô).</description>
    </item>
    
    <item>
      <title>How to install NixOS</title>
      <link>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-install/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-install/</guid>
      <description>Special thanks to Rayan Lahfa
ISO &amp;amp; VBOX configuration This tutorial was realized with a virtual environment using VirtualBox, don&amp;rsquo;t forget to activate the EFI option into your VM configuration.
You can download the official NIXOS ISO here : nixos.org/download
Don&amp;rsquo;t hesitate to read the wiki here : nixos.org
Installation If you have any issue, Google is your friend
For this install, I used a Virtual Disk of 25GiB.
# Display NixOS Wiki $ nixos-help # If you need to change the keyboard layout, use this command with you contry code # here I used French layout $ loadkeys fr # Switch with root $ sudo -i # Display disks name and partitions $ lsblk # Open parted tool and free 2GB for the SWAP $ parted /dev/sda -- mklabel gpt $ parted /dev/sda -- mkpart primary 512MiB -2GiB $ parted /dev/sda -- mkpart primary -2GiB 100% # Create boot ESP $ parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB $ parted /dev/sda -- set 3 boot on # Encryption of the root partition $ cryptsetup luksFormat /dev/sda1 $ cryptsetup luksOpen /dev/sda1 nixos-root # Check if you nixos-root is open $ ls -l /dev/mapper # Format the nixos-root into BTRFS mkfs.</description>
    </item>
    
    <item>
      <title>How to setup Wireguard NixOS</title>
      <link>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-wireguard/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-wireguard/</guid>
      <description>Special thnks to Rayan Lahfa
and Klaes ;)
Wiki ! You can use the default configuration file : Nixos-Wireguard
Install &amp;amp; setup First, you need to install wireguard using :
$ nix-env -iA nixos.wireguard Now, you need to create the wireguard.nix file, this file will contain the default configuration of Wireguard :
$ vim /etc/nixos/wireguard.nix Generate keys You need to creat a bunch of public/private keys for your server and your android client :</description>
    </item>
    
    <item>
      <title>How to setup your SSH on NixOS</title>
      <link>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-ssh/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/linux-tutorials/nixos/nixos-ssh/</guid>
      <description>SSH configuration TO change the confguration of you SSH, you have to edit your configuration.nix.
You cannot edit the default ssh file located in /etc/ssh/sshd_config.
Enable openssh First, you need to enable the OpenSSH Daemon.
[...] # List services that you want to enable: services.openssh.enable = true; [...] Enable root login For your first install, you may need to acces your NixOS VM using SSH but the root connction is not allowed by default.</description>
    </item>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  </channel>
</rss>
