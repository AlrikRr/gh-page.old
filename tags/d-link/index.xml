<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>D-LINK on AlrikRr&#39;s Blog</title>
    <link>https://AlrikRr.github.io/tags/d-link/</link>
    <description>Recent content in D-LINK on AlrikRr&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://AlrikRr.github.io/tags/d-link/index.xml" rel="self" type="application/rss+xml" /><item>
      <title>D-Link - DCS-932L</title>
      <link>https://AlrikRr.github.io/posts/reverse-engineering/iot-hacking/d-link-dcs-932l/</link>
      <pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://AlrikRr.github.io/posts/reverse-engineering/iot-hacking/d-link-dcs-932l/</guid>
      <description>This is actually my first firmware &amp;ldquo;Reverse&amp;rdquo;. This post will also serve as a tutorial for myself and others ! For education purpose Sources Version : 1.14.04 MD5 : b93d60f595c4736a153ca8c61d77ffc6 Download link http://files.dlink.com.au/products/DCS-932L/REV_A/Firmware/ This test we perfomed on Kali Linux VM.
Stage 1 - Analysis Using binwalk we can &amp;ldquo;walk&amp;rdquo; through the firmware and check signatures inside the binary, those signatures return known Desciption and Hex address. of what&amp;rsquo;s inside the binary.</description>
    </item>
    
    
  </channel>
</rss>
